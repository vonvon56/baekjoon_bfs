n = int(input())
graph = [list(map(int,input())) for _ in range(n)]
#1이 아파트다.
count = 0
def dfs(x,y,count=0):
    if x < 0 or x >= n or y < 0 or y >= n or graph[x][y] == 0 :
        return 0
    count = 1
    graph[x][y] = 0
    directions = [[-1,0],[1,0],[0,1],[0,-1]]
    #if graph[x][y] == 1:
    for dd in directions:
        newx = x + dd[0]
        newy = y + dd[1]
        count += dfs(newx,newy,count)
    return count

whole = 0
answer = []
for i in range(n):
    for j in range(n):
        #print(dfs(i,j))
        #if dfs(i,j) > 0:
            #print(dfs(i,j))
            #whole += 1  
        answer.append(dfs(i,j))
#print(answer)
answer = sorted([i for i in answer if i != 0])
print(len(answer))

#print(whole)
#print(answer)
for i in answer:
    print(i)
